// main.js - A simplified example
// ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á @line/liff ‡∏ú‡πà‡∏≤‡∏ô npm (‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ CDN ‡πÅ‡∏ó‡∏ô), ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
// import liff from '@line/liff'; 

const LIFF_ID = '2007522746-g2a1qOPj'; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ LIFF ID ‡∏ô‡∏µ‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å LINE Developers Console

// ‡∏£‡∏≠‡πÉ‡∏´‡πâ LIFF SDK ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô
document.addEventListener('DOMContentLoaded', function() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ LIFF SDK ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
    if (window.liff) {
        initializeLiff();
    } else {
        // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        window.addEventListener('liff_init', initializeLiff);
    }
});

async function initializeLiff() {
    try {
        await liff.init({ liffId: LIFF_ID });
        
        // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô LINE ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!liff.isInClient()) {
            document.getElementById('error-message').style.display = 'block';
            document.getElementById('create-poll-form').style.display = 'none';
            return;
        }

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        const profile = await liff.getProfile();
        document.getElementById('user-display-name').textContent = profile.displayName;
        document.getElementById('profile-picture').src = profile.pictureUrl;
        document.getElementById('profile').style.display = 'flex';

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
        setupForm();

    } catch (err) {
        console.error('LIFF initialization failed', err);
        document.getElementById('liff-app').innerHTML = `
            <p style="color: red; text-align: center;">
                Error: Could not initialize LIFF. <br>
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö LIFF ID ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï<br>
                Error details: ${err.message}
            </p>`;
    }
}

function setupForm() {
    const form = document.getElementById('create-poll-form');
    if (!form) return;

    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
    const dateInput = document.getElementById('date');
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const todayStr = today.toISOString().split('T')[0];
    dateInput.setAttribute('min', todayStr);
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    if (!dateInput.value) {
        dateInput.value = todayStr;
    }

    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
    const timeInput = document.getElementById('time');
    if (timeInput) {
        timeInput.setAttribute('step', '900'); // ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏•‡∏∞ 15 ‡∏ô‡∏≤‡∏ó‡∏µ
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        if (!timeInput.value) {
            const now = new Date();
            const minutes = Math.ceil(now.getMinutes() / 15) * 15;
            now.setMinutes(minutes, 0, 0);
            timeInput.value = now.toTimeString().slice(0, 5);
        }
    }

    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö location radio buttons
    const locationOther = document.getElementById('location2');
    const locationOtherInput = document.getElementById('location-other');

    // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å radio button
    document.querySelectorAll('input[name="location"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.value === 'other') {
                locationOtherInput.disabled = false;
                locationOtherInput.required = true;
                locationOtherInput.focus();
            } else {
                locationOtherInput.disabled = true;
                locationOtherInput.required = false;
                locationOtherInput.value = '';
            }
        });
    });

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        try {
            const date = document.getElementById('date').value;
            const time = document.getElementById('time').value;
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤
            const selectedDateTime = new Date(`${date}T${time}`);
            const now = new Date();
            
            if (selectedDateTime < now) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï');
                return;
            }

            const selectedLocation = document.querySelector('input[name="location"]:checked');
            if (!selectedLocation) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà');
                return;
            }

            let location = selectedLocation.value;
            
            // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å input text
            if (location === 'other') {
                location = locationOtherInput.value.trim();
                if (!location) {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà');
                    return;
                }
            }

            const details = document.getElementById('details').value;

            // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
            const thaiDate = new Date(date).toLocaleDateString('th-TH', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                weekday: 'long'
            });

            // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö HH:mm
            const formattedTime = time.split(':').map(num => num.padStart(2, '0')).join(':');

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Poll
            const pollMessage = `üè∏ ‡∏ä‡∏ß‡∏ô‡∏ï‡∏µ‡πÅ‡∏ö‡∏î!\n\nüìÖ ${thaiDate}\n‚åö ${formattedTime} ‡∏ô.\nüìç ${location}\n\n${details ? `üìù ${details}\n\n` : ''}‡∏°‡∏≤‡∏ï‡∏µ‡πÅ‡∏ö‡∏î‡∏Å‡∏±‡∏ô! ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "üëç" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°`;

            // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ä‡∏ó
            await liff.sendMessages([
                {
                    type: 'text',
                    text: pollMessage
                }
            ]);

            // ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ LIFF
            liff.closeWindow();

        } catch (err) {
            console.error('Error creating poll:', err);
            alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}`);
        }
    });
} 